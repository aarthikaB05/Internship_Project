# -*- coding: utf-8 -*-
"""Data_Cleaning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OnbI1bvAd0xevlPV_jC1QYvMGFkPzN7J

### Importing important Laibraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""### Loading Dataset to clean Dataset"""

df = pd.read_csv('/content/Dataset.csv')
print("Before Cleaning:", df.shape)

"""### Removing Duplicates"""

df = df.drop_duplicates()
print("After Removing Duplicates:", df.shape)

"""### Convert Timestamp to datetime format"""

# df['Timestamp'] = pd.to_datetime(df['Timestamp'])
#df = df.sort_values('Timestamp').reset_index(drop=True)

"""### Check for NULL values BEFORE filling"""

print("Null Values Before Filling:\n", df.isnull().sum())

"""### Handling Missing Values
#### Fill Missing Values (forward fill or mean)
"""

df.fillna(method='ffill', inplace=True)

"""### Checking NULL values after removing all the missing values"""

print("\n Null Values After Filling:\n", df.isnull().sum())

"""### Handling Outliers (removing extreme power consumption values)"""

for col in ['Global_active_power', 'Global_reactive_power', 'Voltage', 'Global_intensity']:
    if col in df.columns:
        q1 = df[col].quantile(0.25)
        q3 = df[col].quantile(0.75)
        iqr = q3 - q1
        lower = q1 - 1.5 * iqr
        upper = q3 + 1.5 * iqr
        df = df[(df[col] >= lower) & (df[col] <= upper)]

print("After Removing Outliers:", df.shape)

"""### Reseting Index"""

df = df.reset_index(drop=True)

"""### Summary Statistics (Before and After)"""

print("Summary after Cleaning:")
print(df.describe())

"""### Visualization before and after cleaning the dataset"""

import seaborn as sns
import matplotlib.pyplot as plt

sns.set_style("whitegrid")
plt.rcParams['figure.figsize'] = (12,6)

"""### Null Values Heatmap"""

sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.title('Null Values Heatmap')
plt.show()

"""### Boxplot Example"""

sns.boxplot(x=df['Global_active_power'])
plt.title('Boxplot of Global Active Power (After Cleaning)')
plt.show()

"""
### Distribution Plot"""

sns.histplot(df['Voltage'], kde=True, color='green')
plt.title('Voltage Distribution')
plt.show()

"""### Saving Cleaned Dataset"""

df.to_csv('cleaned_data.csv', index=False)
print("Cleaned Dataset Saved as 'cleaned_data.csv'")